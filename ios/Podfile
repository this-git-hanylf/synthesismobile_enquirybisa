# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'Urban' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  # use_frameworks!

  # Pods for Urban
  platform :ios, '10.0'
  pod "yoga", :path => "../node_modules/react-native/ReactCommon/yoga"
  pod 'React', :path => '../node_modules/react-native', :subspecs => [
    'Core',
    'DevSupport',
    'RCTActionSheet',
    'RCTAnimation',
    'RCTGeolocation',
    'RCTImage',
    'RCTLinkingIOS',
    'RCTNetwork',
    'RCTSettings',
    'RCTText',
    'RCTVibration',
    'RCTWebSocket'
  ]
  
  pod 'RNDeviceInfo', :path => '../node_modules/react-native-device-info'
  pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'
  pod 'react-native-webview', :path => '../node_modules/react-native-webview'
  pod 'RNImageCropPicker', :path => '../node_modules/react-native-image-crop-picker'
  pod 'RNGoogleSignin', :path => '../node_modules/react-native-google-signin'
  pod 'react-native-mail', :path => '../node_modules/react-native-mail'
  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
  pod 'react-native-maps', :path => '../node_modules/react-native-maps'
  pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'
  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'

  # Add the Firebase pod for Google Analytics
pod 'Firebase/Analytics'

# Add the pods for any other Firebase products you want to use in your app
# For example, to use Firebase Authentication and Cloud Firestore
pod 'Firebase/Auth'
# pod 'FirebaseUI/Auth'
# pod 'Firebase/Firestore'
# Required by RNFirebase
pod 'Firebase/Core', '~> 6.3.0'

pod 'FBSDKCoreKit', '~> 5.8', :modular_headers => true
pod 'FBSDKLoginKit', '~> 5.13'
pod 'FBSDKShareKit', '~> 5.13'

  target 'UrbanTests' do
    inherit! :search_paths
    # Pods for testing
  end

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      if target.name == "React"
        target.remove_from_project
      end
    end
  end

  def fix_fb
    node_modules_path = '../node_modules'
    patched_text = File.read("./RCTFBSDKLoginButtonManager.m.patch")

    File.open("#{node_modules_path}/react-native-fbsdk/ios/RCTFBSDK/login/RCTFBSDKLoginButtonManager.m", "w") {|file| file.puts patched_text}
  end


end

# target 'Urban-tvOS' do
#   # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
#   # use_frameworks!

#   # Pods for Urban-tvOS

#   target 'Urban-tvOSTests' do
#     inherit! :search_paths
#   end

# end
